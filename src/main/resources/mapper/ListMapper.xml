<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.godLife.project.mapper.ListMapper">

    <!-- (개인용) 전체 조회 -->
    <select id="getMyPlansByUserIdx" parameterType="int" resultType="com.godLife.project.dto.list.customDTOs.CustomPlanDTO">
        SELECT PLAN_IDX, PLAN_TITLE, END_TO, PLAN_SUB_END,
        IS_SHARED, IS_ACTIVE, PLAN_IMP, CERT_EXP,
        REPEAT_DAYS, FIRE_STATE
        FROM PLAN_TABLE
        WHERE USER_IDX = #{userIdx} AND IS_DELETED = 0 AND IS_COMPLETED = 0
        ORDER BY IS_ACTIVE DESC, PLAN_IMP DESC, PLAN_SUB_START DESC NULLS LAST
    </select>

    <resultMap id="PlanListResultMap" type="com.godLife.project.dto.list.PlanListDTO">
        <association property="planInfos" javaType="com.godLife.project.dto.list.customDTOs.CustomPlanListDTO">
            <result property="rank" column="RANK"/>
            <result property="planIdx" column="PLAN_IDX"/>
            <result property="userNick" column="USER_NICK"/>
            <result property="planTitle" column="PLAN_TITLE"/>
            <result property="planSubDate" column="PLAN_SUB_DATE"/>
            <result property="viewCount" column="VIEW_COUNT"/>
            <result property="likeCount" column="LIKE_COUNT"/>
            <result property="forkCount" column="FORK_COUNT"/>
            <result property="isActive" column="IS_ACTIVE"/>
            <result property="isCompleted" column="IS_COMPLETED"/>
        </association>

        <association property="fireInfos" javaType="com.godLife.project.dto.list.customDTOs.CustomFireDTO">
            <result property="lvIdx" column="LV_IDX"/>
            <result property="fireName" column="FIRE_NAME"/>
            <result property="fireColor" column="FIRE_COLOR"/>
            <result property="fireEffect" column="FIRE_EFFECT"/>
        </association>

        <association property="targetInfos" javaType="com.godLife.project.dto.list.customDTOs.CustomTargetDTO">
            <result property="name" column="TARGET_NAME"/>
            <result property="iconKey" column="TARGET_ICON_KEY"/>
            <result property="icon" column="TARGET_ICON"/>
            <result property="color" column="TARGET_COLOR"/>
        </association>

        <association property="jobDefault" javaType="com.godLife.project.dto.list.customDTOs.CustomJobDTO">
            <result property="name" column="JOB_NAME"/>
            <result property="iconKey" column="JOB_ICON_KEY"/>
            <result property="icon" column="JOB_ICON"/>
            <result property="color" column="JOB_COLOR"/>
        </association>

        <association property="jobEtc" javaType="com.godLife.project.dto.list.customDTOs.CustomEtcJobDTO">
            <result property="name" column="ETC_JOB_NAME"/>
            <result property="iconKey" column="ETC_ICON_KEY"/>
            <result property="icon" column="ETC_ICON"/>
            <result property="color" column="ETC_COLOR"/>
        </association>
    </resultMap>

    <!-- (공용) 전체 조회 -->
    <select id="getAllPlanList" parameterType="map" resultMap="PlanListResultMap">
        SELECT
        <choose>
            <!-- 랭크 모드 -->
            <when test="mode == 'rank'">
                ROW_NUMBER() OVER (ORDER BY ((P.CERT_EXP / 5) * 0.4) + (P.LIKE_COUNT * 0.7) + (P.FORK_COUNT * 1.2) DESC) AS RANK,
            </when>
            <!-- 기본 모드 -->
            <otherwise>
                ROW_NUMBER() OVER (ORDER BY
                <choose>
                    <!-- 등록일 기준 정렬 -->
                    <when test="sort == 'latest'">
                        P.PLAN_SUB_DATE
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 조회수 기준 정렬 -->
                    <when test="sort == 'view'">
                        P.VIEW_COUNT
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 추천수 기준 정렬 -->
                    <when test="sort == 'like'">
                        P.LIKE_COUNT
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 포크수 기준 정렬 -->
                    <when test="sort == 'fork'">
                        P.FORK_COUNT
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 불꽃 경험치 기준 정렬 -->
                    <when test="sort == 'fire'">
                        P.CERT_EXP
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 예외 발생시 최신순 정렬 -->
                    <otherwise>
                        P.PLAN_SUB_DATE DESC
                    </otherwise>
                </choose>
                ) AS RANK,
            </otherwise>
        </choose>
        <!-- 공통 -->
        P.PLAN_IDX, U.USER_NICK || ' ' || U.NICK_TAG AS USER_NICK, P.PLAN_TITLE, P.PLAN_SUB_DATE, P.VIEW_COUNT, P.LIKE_COUNT, P.FORK_COUNT, P.IS_ACTIVE, P.IS_COMPLETED,
        F.LV_IDX, F.FIRE_NAME, F.FIRE_COLOR, F.FIRE_EFFECT,
        T.TARGET_NAME, T.ICON_KEY AS TARGET_ICON_KEY, IT.ICON AS TARGET_ICON, IT.COLOR AS TARGET_COLOR,
        J.JOB_NAME, J.ICON_KEY AS JOB_ICON_KEY, IJ.ICON AS JOB_ICON, IJ.COLOR AS JOB_COLOR,
        ETC.JOB_NAME, ETC.ICON_KEY AS ETC_ICON_KEY, IE.ICON AS ETC_ICON, IE.COLOR AS ETC_COLOR

        FROM PLAN_TABLE P

        INNER JOIN USER_TABLE U ON P.USER_IDX = U.USER_IDX
        INNER JOIN FIRE_TABLE F ON P.CERT_EXP BETWEEN F.MIN_EXP AND F.MAX_EXP
        INNER JOIN TARGET_CATEGORY T ON P.TARGET_IDX = T.TARGET_IDX
        LEFT JOIN ICON_TABLE IT ON T.ICON_KEY = IT.ICON_KEY
        INNER JOIN JOB_CATEGORY J ON P.JOB_IDX = J.JOB_IDX
        LEFT JOIN ICON_TABLE IJ ON J.ICON_KEY = IJ.ICON_KEY
        LEFT JOIN JOB_ETC_CATEGORY ETC ON P.PLAN_IDX = ETC.PLAN_IDX
        LEFT JOIN ICON_TABLE IE ON ETC.ICON_KEY = IE.ICON_KEY

        WHERE P.IS_SHARED = 1 AND P.IS_DELETED = 0
        <!-- 상태 필터 -->
        <choose>
            <!-- 랭크 모드 -->
            <when test="mode == 'rank'">
                AND IS_COMPLETED = 0
                AND IS_ACTIVE = 1
                AND CERT_EXP >= 100
            </when>
            <!-- 기본 모드 -->
            <otherwise>
                <choose>
                    <when test="status != 3">
                        AND IS_COMPLETED = 0
                        <if test="status == 1">
                            AND IS_ACTIVE = 1
                        </if>
                        <if test="status == 2">
                            AND IS_ACTIVE = 0
                        </if>
                    </when>
                    <otherwise>
                        AND IS_COMPLETED = 1
                    </otherwise>
                </choose>
            </otherwise>
        </choose>

        <!-- 목표 카테고리 필터 -->
        <if test="target != null and target.size() > 0 ">
            AND P.TARGET_IDX IN
            <foreach item="item" index="index" collection="target" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <!-- 직업 카테고리 필터 -->
        <if test="job != null and job.size() > 0 ">
            AND P.JOB_IDX IN
            <foreach item="item" index="index" collection="job" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

        ORDER BY
        <choose>
            <!-- 랭크 모드 -->
            <when test="mode == 'rank'">
                ((P.CERT_EXP / 5) * 0.4) + (P.LIKE_COUNT * 0.7) + (P.FORK_COUNT * 1.2) DESC
            </when>
            <!-- 기본 모드 -->
            <otherwise>
                <choose>
                    <!-- 등록일 기준 정렬 -->
                    <when test="sort == 'latest'">
                        P.PLAN_SUB_DATE
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 조회수 기준 정렬 -->
                    <when test="sort == 'view'">
                        P.VIEW_COUNT
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 추천수 기준 정렬 -->
                    <when test="sort == 'like'">
                        P.LIKE_COUNT
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 포크수 기준 정렬 -->
                    <when test="sort == 'fork'">
                        P.FORK_COUNT
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 불꽃 경험치 기준 정렬 -->
                    <when test="sort == 'fire'">
                        P.CERT_EXP
                        <choose>
                            <when test="order == 'desc'"> DESC</when>
                            <otherwise> asc</otherwise>
                        </choose>
                    </when>
                    <!-- 예외 발생시 최신순 정렬 -->
                    <otherwise>
                        P.PLAN_SUB_DATE DESC
                    </otherwise>
                </choose>
            </otherwise>
        </choose>

        OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
    </select>

    <!-- 총 페이지 수 조회 -->
    <select id="getTotalPlanCount" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM PLAN_TABLE WHERE IS_SHARED = 1 AND IS_DELETED = 0
        <!-- 상태 필터 -->
        <choose>
            <!-- 랭크 모드 -->
            <when test="mode == 'rank'">
                AND IS_COMPLETED = 0
                AND IS_ACTIVE = 1
                AND CERT_EXP >= 100
            </when>
            <!-- 기본 모드 -->
            <otherwise>
                <choose>
                    <when test="status != 3">
                        AND IS_COMPLETED = 0
                        <if test="status == 1">
                            AND IS_ACTIVE = 1
                        </if>
                        <if test="status == 2">
                            AND IS_ACTIVE = 0
                        </if>
                    </when>
                    <otherwise>
                        AND IS_COMPLETED = 1
                    </otherwise>
                </choose>
            </otherwise>
        </choose>
        <!-- 목표 카테고리 필터 -->
        <if test="target != null and target.size() > 0 ">
            AND TARGET_IDX IN
            <foreach item="item" index="index" collection="target" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <!-- 직업 카테고리 필터 -->
        <if test="job != null and job.size() > 0 ">
            AND JOB_IDX IN
            <foreach item="item" index="index" collection="job" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

</mapper>

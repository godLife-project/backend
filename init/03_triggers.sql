		#### 트리거 생성
-- 고객센터 등록 제약조건 트리거
CREATE TRIGGER TRG_SERVICE_CENTER_INSERT_CHECK
BEFORE INSERT ON SERVICE_CENTER
FOR EACH ROW
BEGIN
    DECLARE v_auth_idx BIGINT;

    SELECT AUTHORITY_IDX INTO v_auth_idx
    FROM USER_TABLE
    WHERE USER_IDX = NEW.USER_IDX;

    IF v_auth_idx NOT IN (3, 4, 6, 7) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '권한이 없는 유저는 고객센터 등록이 불가합니다.';
    END IF;
END;

CREATE TRIGGER TRG_SERVICE_CENTER_UPDATE_CHECK
BEFORE UPDATE ON SERVICE_CENTER
FOR EACH ROW
BEGIN
    DECLARE v_auth_idx BIGINT;

    SELECT AUTHORITY_IDX INTO v_auth_idx
    FROM USER_TABLE
    WHERE USER_IDX = NEW.USER_IDX;

    IF v_auth_idx NOT IN (3, 4, 6, 7) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '권한이 없는 유저는 고객센터 등록이 불가합니다.';
    END IF;
END;


-- 인증 데이터 추가시 제약조건 검증 트리거
CREATE TRIGGER TRG_VERIFY_UNIQUE_CHECK_INSERT
BEFORE INSERT ON VERIFY_TABLE
FOR EACH ROW
BEGIN
    DECLARE v_count INT DEFAULT 0;

    IF NEW.ACTIVITY_IDX IS NOT NULL THEN
        SELECT COUNT(*) INTO v_count
        FROM VERIFY_TABLE
        WHERE ACTIVITY_IDX = NEW.ACTIVITY_IDX
          AND USER_IDX = NEW.USER_IDX
          AND DATE(VERIFY_DATE) = CURRENT_DATE;

        IF v_count > 0 THEN
            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '이미 해당 날짜에 동일한 활동 인증이 존재합니다.';
        END IF;
    END IF;

    IF NEW.CHALL_IDX IS NOT NULL THEN
        SELECT COUNT(*) INTO v_count
        FROM VERIFY_TABLE
        WHERE CHALL_IDX = NEW.CHALL_IDX
          AND USER_IDX = NEW.USER_IDX
          AND DATE(VERIFY_DATE) = CURRENT_DATE;

        IF v_count > 0 THEN
            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = '이미 해당 날짜에 동일한 챌린지 인증이 존재합니다.';
        END IF;
    END IF;
END;
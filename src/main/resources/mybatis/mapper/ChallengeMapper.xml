<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.godLife.project.mapper.ChallengeMapper">

    <!-- 챌린지 생성 (유저 참여형일 때는 START_TIME과 END_TIME을 NULL로 저장) -->
    <insert id="createChallenge">
        INSERT INTO CHALL_TABLE (
        CHALL_IDX, CHALL_TITLE, CHALL_DESCRIPTION, CHALL_CATEGORY_IDX,
        MIN_PARTICIPATION_TIME, TOTAL_CLEAR_TIME, MAX_PARTICIPANTS,
        CHALL_CREATED_AT, CHALL_STATE, CHALL_START_TIME, CHALL_END_TIME, USER_JOIN, DURATION
        )
        VALUES (
        CHALL_SEQ.NEXTVAL, #{challTitle}, #{challDescription}, #{challCategoryIdx},
        #{minParticipationTime}, #{totalClearTime}, #{maxParticipants},
        SYSDATE, #{challState},  #{challStartTime}, #{challEndTime}, #{userJoin}, #{duration}
        )
    </insert>

    <!-- 유저 참여형 챌린지 최초 참여 시 정보 업데이트 -->
    <update id="updateChallengeStartTime">
        UPDATE CHALL_TABLE
        SET CHALL_START_TIME = #{challStartTime},
        CHALL_END_TIME = #{challEndTime},
        CHALL_STATE = #{challState}
        WHERE CHALL_IDX = #{challIdx}
    </update>

    <!-- 최신 챌린지 LIST 조회 -->
    <select id="getLatestChallenges" resultType="com.godLife.project.dto.request.ChallRequestDTO">
        SELECT
        CT.CHALL_IDX,
        CT.CHALL_TITLE,
        TO_CHAR(CT.CHALL_DESCRIPTION) AS CHALL_DESCRIPTION,
        CT.CHALL_CATEGORY_IDX,
        CT.MAX_PARTICIPANTS,
        CT.CHALL_END_TIME,
        COUNT(CJ.USER_IDX) AS CURRENT_PARTICIPANTS,
        CT.CHALL_CREATED_AT
        FROM CHALL_TABLE CT
        LEFT JOIN CHALL_JOIN CJ ON CT.CHALL_IDX = CJ.CHALL_IDX
        WHERE CT.CHALL_END_TIME IS NULL OR CT.CHALL_END_TIME > SYSDATE
        GROUP BY
        CT.CHALL_IDX,
        CT.CHALL_TITLE,
        TO_CHAR(CT.CHALL_DESCRIPTION),
        CT.CHALL_CATEGORY_IDX,
        CT.MAX_PARTICIPANTS,
        CT.CHALL_END_TIME,
        CT.CHALL_CREATED_AT
        ORDER BY CT.CHALL_CREATED_AT DESC
        OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
    </select>

    <!-- 최신 챌린지 총 개수 조회 -->
    <select id="countLatestChallenges" resultType="int">
        SELECT COUNT(*)
        FROM CHALL_TABLE
        WHERE CHALL_END_TIME IS NULL OR CHALL_END_TIME > SYSDATE
    </select>

    <!-- 카테고리별 챌린지 조회 (참여자 수 포함, 페이징 적용) -->
    <select id="getChallengesByCategoryId" resultType="com.godLife.project.dto.request.ChallRequestDTO">
        SELECT
        CT.CHALL_IDX,
        CT.CHALL_TITLE,
        TO_CHAR(CT.CHALL_DESCRIPTION) AS CHALL_DESCRIPTION,
        CT.CHALL_CATEGORY_IDX,
        CT.MAX_PARTICIPANTS,
        CT.CHALL_END_TIME,
        COUNT(CJ.USER_IDX) AS CURRENT_PARTICIPANTS,
        CT.CHALL_CREATED_AT
        FROM CHALL_TABLE CT
        LEFT JOIN CHALL_JOIN CJ ON CT.CHALL_IDX = CJ.CHALL_IDX
        WHERE CT.CHALL_CATEGORY_IDX = #{challCategoryIdx}
        AND (CT.CHALL_END_TIME IS NULL OR CT.CHALL_END_TIME > SYSDATE)
        GROUP BY
        CT.CHALL_IDX,
        CT.CHALL_TITLE,
        TO_CHAR(CT.CHALL_DESCRIPTION),
        CT.CHALL_CATEGORY_IDX,
        CT.MAX_PARTICIPANTS,
        CT.CHALL_END_TIME,
        CT.CHALL_CREATED_AT
        ORDER BY CT.CHALL_CREATED_AT DESC
        OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
    </select>

    <!-- 카테고리별 챌린지 총 개수 조회 -->
    <select id="countChallengesByCategoryId" resultType="int">
        SELECT COUNT(*)
        FROM CHALL_TABLE
        WHERE CHALL_CATEGORY_IDX = #{challCategoryIdx}
    </select>


    <!-- 챌린지 상세정보 조회 -->
    <select id="challengeDetail" resultType="com.godLife.project.dto.contents.ChallengeDTO">
        SELECT
            CHALL_IDX, CHALL_TITLE, CHALL_DESCRIPTION, CHALL_CATEGORY_IDX,
            MIN_PARTICIPATION_TIME, TOTAL_CLEAR_TIME, MAX_PARTICIPANTS,
            CHALL_START_TIME, CHALL_END_TIME, CHALL_CREATED_AT, CHALL_STATE, DURATION,  USER_JOIN
        FROM Chall_table
        WHERE CHALL_IDX = #{challIdx}
    </select>


    <!-- 중복 참여 Mapper -->
    <select id="isUserAlreadyJoined" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM CHALL_JOIN
        WHERE CHALL_IDX = #{challIdx} AND USER_IDX = #{userIdx}
    </select>

    <!-- 유저 참여 -->
    <insert id="addUserToChallenge">
        INSERT INTO CHALL_JOIN (CHALL_JOIN_IDX, chall_idx, user_idx)
        VALUES (CHALL_JOIN_SEQ.NEXTVAL ,#{challIdx}, #{userIdx})
    </insert>

    <!-- 참여인원 확인 메퍼 -->
    <select id="countParticipants" resultType="int">
        SELECT COUNT(*)
        FROM chall_join
        WHERE chall_idx = #{challIdx}
    </select>



    <!-- 인증 기록 저장 -->
    <insert id="insertVerify">
    INSERT INTO VERIFY_TABLE (
        VERIFY_IDX, CHALL_IDX, USER_IDX,  VERIFY_DATE, ELAPSED_TIME)
    VALUES (
        VERIFY_SEQ.NEXTVAL, #{challIdx}, #{userIdx}, SYSDATE, #{elapsedTime}
    )
    </insert>

    <!-- challJoin 업데이트 메퍼 -->
    <update id="updateChallJoin">
        UPDATE CHALL_JOIN
        SET START_TIME = #{startTime},
        END_TIME = #{endTime},
        ACTIVITY = #{activity}
        WHERE CHALL_IDX = #{challIdx}
        AND USER_IDX = #{userIdx}
    </update>

    <!-- 챌린지 참여 확인 -->
    <select id="getJoinInfo" resultType="com.godLife.project.dto.infos.ChallengeJoinDTO">
        SELECT
        CHALL_JOIN_IDX,
        CHALL_IDX,
        USER_IDX,
        START_TIME,
        END_TIME,
        ACTIVITY
        FROM CHALL_JOIN
        WHERE CHALL_IDX = #{challIdx}
        AND USER_IDX = #{userIdx}
    </select>

    <!-- 하루 한번 인증 -->
    <select id="countTodayVerification" resultType="int">
        SELECT COUNT(*)
        FROM verify_table
        WHERE user_idx = #{userIdx}
        AND chall_idx = #{challIdx}
        AND verify_date BETWEEN #{startOfDay} AND #{endOfDay}
    </select>


    <!-- 남은 클리어 시간 차감 및 상태 변경 -->
    <update id="updateClearTime">
        UPDATE CHALL_TABLE
        SET TOTAL_CLEAR_TIME = CASE
                                   WHEN TOTAL_CLEAR_TIME - #{elapsedTime} <![CDATA[<]]> 0 THEN 0
                                   ELSE TOTAL_CLEAR_TIME - #{elapsedTime}
            END,
            CHALL_STATE = CASE
                              WHEN TOTAL_CLEAR_TIME - #{elapsedTime} <![CDATA[<=]]> 0 THEN 'FINISHED'
                              ELSE CHALL_STATE
                END
        WHERE CHALL_IDX = #{challIdx}
    </update>

    <!-- 인증을 통해 감소한 총 시간 조회 -->
    <select id="getElapsedClearTime" resultType="int">
        SELECT COALESCE(SUM(ELAPSED_TIME), 0)
        FROM VERIFY_TABLE
        WHERE CHALL_IDX = #{challIdx}
    </select>

    <select id="getTotalClearTime" resultType="int" parameterType="long">
        SELECT TOTAL_CLEAR_TIME
        FROM CHALL_TABLE
        WHERE CHALL_IDX = #{challIdx}
    </select>

    <!-- 클리어 시간 0 이하 시 챌린지 종료 처리 -->
    <update id="finishChallenge">
        UPDATE CHALL_TABLE
        SET CHALL_STATE = 'FINISHED'
        WHERE CHALL_IDX = #{challIdx}
    </update>


    <!-- 챌린지 존재 확인 -->
    <select id="existsById" resultType="int">
        SELECT COUNT(*) FROM chall_table WHERE chall_idx = #{challIdx}
    </select>

    <!-- 챌린지 수정 -->
    <update id="modifyChallenge">
    UPDATE CHALL_TABLE
    SET CHALL_TITLE = #{challTitle},
    CHALL_DESCRIPTION = #{challDescription},
    CHALL_CATEGORY_IDX = #{challCategoryIdx},
    MIN_PARTICIPATION_TIME = #{minParticipationTime},
    MAX_PARTICIPANTS = #{maxParticipants}
    WHERE CHALL_IDX=#{challIdx}
    </update>

    <!-- 챌린지 삭제 -->
    <delete id="deleteChallenge">
    DELETE FROM CHALL_TABLE
    WHERE CHALL_IDX = #{challIdx}
    </delete>

    <!-- 챌린지 제목, 카테고리 내에서 검색 -->
    <select id="searchChallenges" resultType="com.godLife.project.dto.contents.ChallengeDTO">
        SELECT *
        FROM chall_table
        WHERE 1=1
        <if test="title != null and title != ''">
            AND LOWER(chall_name) LIKE '%' || LOWER(#{challTitle}) || '%'
        </if>
        <if test="category != null and category != ''">
            AND LOWER(category) LIKE '%' || LOWER(#{challCategory}) || '%'
        </if>
        ORDER BY ${sort}
        OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
    </select>


</mapper>

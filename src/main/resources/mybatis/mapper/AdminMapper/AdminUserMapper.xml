<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.godLife.project.mapper.AdminMapper.AdminUserMapper">

    <!-- 유저 정보 조회  (아이디, 닉네임, 태그, 이메일, 가입일자, 루틴 수, 신고수, 관리 -->
    <select id="selectAllActiveUsers" resultType="com.godLife.project.dto.list.customDTOs.AdminUserDTO">
        SELECT
        u.USER_IDX,
        u.USER_NAME,
        u.USER_ID,
        u.USER_NICK,
        u.NICK_TAG,
        u.USER_EMAIL,
        u.USER_JOIN,
        u.REPORT_COUNT,
        IFNULL(p.PLAN_COUNT, 0) AS PLAN_COUNT
        FROM USER_TABLE u
        LEFT JOIN (
        SELECT USER_IDX, COUNT(*) AS PLAN_COUNT
        FROM PLAN_TABLE
        GROUP BY USER_IDX
        ) p ON u.USER_IDX = p.USER_IDX
        WHERE u.IS_DELETED = 'N'
        ORDER BY u.USER_JOIN DESC
        LIMIT #{offset}, #{limit}
    </select>


    <!-- 전체 유저 수 조회 (페이징용) -->
    <select id="countAllActiveUsers" resultType="int">
        SELECT COUNT(*)
        FROM USER_TABLE
        WHERE IS_DELETED = 'N'
    </select>

    <!-- 회원 추방 -->
    <update id="banUserByIdx" parameterType="int">
        UPDATE USER_TABLE
        SET IS_DELETED = 'Y',
        DELETE_DATE = NOW()
        WHERE USER_IDX = #{userIdx}
    </update>

    <!-- 권한 목록 조회 -->
    <select id="getAuthorityList" resultType="com.godLife.project.dto.categories.AuthorityCateDTO">
        SELECT AUTHORITY_IDX, AUTHORITY_NAME, AUTHORITY_DESCRIPTION
        FROM AUTHORITY_CATEGORY
        ORDER BY AUTHORITY_IDX
    </select>

    <!-- 권한별 유저 목록 조회 -->
    <select id="getUserByAuthority" resultType="com.godLife.project.dto.list.customDTOs.AdminUserDTO">
        SELECT USER_IDX, USER_NAME, USER_ID, USER_NICK, USER_EMAIL
        FROM USER_TABLE
        WHERE AUTHORITY_IDX = #{authorityIdx}
        AND IS_DELETED = 'N'
    </select>

    <!-- 관리자 명단 리스트 -->
    <select id="adminList" resultType="com.godLife.project.dto.list.customDTOs.AdminListDTO">
        SELECT
        u.USER_IDX,
        u.USER_NAME,
        u.AUTHORITY_IDX,
        a.AUTHORITY_NAME
        FROM
        USER_TABLE u
        LEFT JOIN
        AUTHORITY_CATEGORY a ON u.AUTHORITY_IDX = a.AUTHORITY_IDX
        WHERE
        u.AUTHORITY_IDX >= 2
    </select>

    <!-- 유저 권한 변경 -->
    <update id="updateUserAuthority">
        UPDATE USER_TABLE
        SET AUTHORITY_IDX = #{authorityIdx}
        WHERE USER_IDX = #{userIdx}
    </update>






</mapper>
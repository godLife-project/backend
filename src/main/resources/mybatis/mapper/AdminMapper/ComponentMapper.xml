<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.godLife.project.mapper.AdminMapper.ComponentMapper">

                    <!--            목표 카테고리 CRUD Mapper         -->

    <!-- 조회 -->
    <select id="targetCategoryList" resultType="com.godLife.project.dto.categories.TargetCateDTO">
        SELECT
        t.TARGET_IDX AS idx,
        t.TARGET_NAME AS name,
        t.ICON_KEY AS iconKey,
        NVL(i.ICON, 'default-icon') AS icon,
        NVL(i.COLOR, '#999999') AS color
        FROM TARGET_CATEGORY t
        LEFT JOIN ICON_TABLE i ON t.ICON_KEY = i.ICON_KEY
    </select>
    <!-- 추가 -->
    <insert id="insertTargetCategory" parameterType="com.godLife.project.dto.categories.TargetCateDTO">
        INSERT INTO TARGET_CATEGORY (TARGET_IDX, TARGET_NAME, ICON_KEY)
        VALUES (TARGET_CATEGORY_SEQ.NEXTVAL, #{name}, #{iconKey})
    </insert>
    <!-- 수정 -->
    <update id="updateTargetCategory" parameterType="com.godLife.project.dto.categories.TargetCateDTO">
        UPDATE target_category
        <set>
            <if test="name != null">
                target_name = #{name},
            </if>
            <if test="iconKey != null">
                icon_key = #{iconKey},
            </if>
        </set>
        WHERE target_idx = #{idx}
    </update>
    <!-- 삭제 -->
    <delete id="deleteTargetCategory" parameterType="int">
        DELETE FROM TARGET_CATEGORY
        WHERE TARGET_IDX = #{idx}
    </delete>
    <!-- 중복 카테고리 확인 -->
    <select id = "countByTargetCateName" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM TARGET_CATEGORY
        WHERE TARGET_NAME = #{name}
    </select>
    <!-- 수정시 중복체크 자기자신 제외 -->
    <select id="countTargetCateNameExceptSelf" resultType="int">
        SELECT COUNT(*)
        FROM TARGET_CATEGORY
        WHERE NAME = #{name}
        AND TARGET_IDX != #{idx}
    </select>


                     <!--            직업 카테고리 CRUD Mapper         -->
    <!-- 조회 -->
    <select id="getAllJobCategories" resultType="com.godLife.project.dto.categories.JobCateDTO">
        SELECT
        j.JOB_IDX AS idx,
        j.JOB_NAME AS name,
        j.ICON_KEY AS iconKey,
        NVL(i.ICON, 'default-icon') AS icon,
        NVL(i.COLOR, '#999999') AS color
        FROM JOB_CATEGORY j
        LEFT JOIN ICON_TABLE i ON j.ICON_KEY = i.ICON_KEY
    </select>

    <!-- 작성 -->
    <insert id="insertJobCategory" parameterType="com.godLife.project.dto.categories.JobCateDTO">
        INSERT INTO JOB_CATEGORY (JOB_IDX, JOB_NAME, ICON_KEY)
        VALUES (JOB_SEQ.NEXTVAL, #{name}, #{iconKey})
    </insert>

    <!-- 수정 -->
    <update id="updateJobCategory" parameterType="com.godLife.project.dto.categories.JobCateDTO">
        UPDATE JOB_CATEGORY
        <set>
            <if test="name != null">
                job_name = #{name},
            </if>
            <if test="iconKey != null">
                icon_key = #{iconKey},
            </if>
        </set>
        WHERE JOB_IDX = #{idx}
    </update>

    <!-- 삭제 -->
    <delete id="deleteJobCategory" parameterType="int">
            DELETE FROM JOB_CATEGORY WHERE JOB_IDX = #{idx}
    </delete>
    <!-- 중복 카테고리 확인 -->
    <select id = "countByJobCateName" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM JOB_CATEGORY
        WHERE JOB_NAME = #{name}
    </select>
    <!-- 수정시 중복체크 자기자신 제외 -->
    <select id="countJobCateNameExceptSelf" resultType="int">
        SELECT COUNT(*)
        FROM JOB_CATEGORY
        WHERE NAME = #{name}
        AND JOB_IDX != #{Idx}
    </select>



                    <!--            등급 관리 테이블 CRUD Mapper         -->
    <!-- 전체 불꽃 등급 목록 조회 -->
    <select id="selectAllFireGrades" resultType="com.godLife.project.dto.datas.FireDTO">
        SELECT
        LV_IDX as lvIdx,
        MIN_EXP as minExp,
        MAX_EXP as maxExp,
        FIRE_NAME as fireName,
        FIRE_COLOR as fireColor,
        FIRE_EFFECT as fireEffect
        FROM
            FIRE_TABLE
        ORDER BY
            MIN_EXP ASC
    </select>

    <!-- 등급 추가 -->
    <insert id="insertFire" parameterType="com.godLife.project.dto.datas.FireDTO">
        INSERT INTO FIRE_TABLE (LV_IDX, MIN_EXP, MAX_EXP, FIRE_NAME, FIRE_COLOR, FIRE_EFFECT)
        VALUES (FIRE_SEQ.NEXTVAL, #{minExp}, #{maxExp}, #{fireName}, #{fireColor}, #{fireEffect})
    </insert>

    <!-- 등급 수정 -->
    <update id="updateFire" parameterType="com.godLife.project.dto.datas.FireDTO">
        UPDATE FIRE_TABLE
        <set>
            <if test="minExp != null">
                MIN_EXP = #{minExp},
            </if>
            <if test="maxExp != null">
                MAX_EXP = #{maxExp},
            </if>
            <if test="fireName != null">
                FIRE_NAME = #{fireName},
            </if>
            <if test="fireColor != null">
                FIRE_COLOR = #{fireColor},
            </if>
            <if test="fireEffect != null">
                FIRE_EFFECT = #{fireEffect},
            </if>
        </set>
        WHERE LV_IDX = #{lvIdx}
    </update>

    <!-- 등급(불꽃) 삭제 -->
    <delete id="deleteFire" parameterType="int">
        DELETE FROM FIRE_TABLE WHERE LV_IDX = #{lvIdx}
    </delete>

    <!-- 중복 등급(불꽃) 확인 -->
    <select id = "countByFireName" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM FIRE_TABLE
        WHERE FIRE_NAME = #{fireName}
    </select>
    <!-- 이름 중복 체크 (수정용 - 자기 자신 제외) -->
    <select id="countByTargetCateNameExceptId" resultType="int">
        SELECT COUNT(*)
        FROM FIRE_TABLE
        WHERE FIRE_NAME = #{fireName}
        AND LV_IDX != #{lvIdx}
    </select>
    <!-- EXP 범위 중복 체크 (추가용) -->
    <select id="countExpOverlap" resultType="int">
        SELECT COUNT(*)
        FROM FIRE_TABLE
        WHERE NOT (
        MAX_EXP &lt; #{minExp} OR MIN_EXP &gt; #{maxExp}
        )
    </select>
    <!-- EXP 범위 중복 체크 (수정용 - 자기 자신 제외) -->
    <select id="countExpOverlapExceptId" resultType="int">
        SELECT COUNT(*)
        FROM FIRE_TABLE
        WHERE NOT (
        MAX_EXP &lt; #{minExp} OR MIN_EXP &gt; #{maxExp}
        )
        AND LV_IDX != #{lvIdx}
    </select>


                    <!--            FAQ CATEGORY 관리 테이블 CRUD Mapper         -->

    <!-- FAQ_CATEGORY LIST 조회 -->
    <select id="selectAllFaqCate" resultType="com.godLife.project.dto.categories.FaqCateDTO">
        SELECT *
        FROM FAQ_CATEGORY
    </select>

    <!-- FAQ_CATEGORY 추가 -->
    <insert id="insertFaqCate" parameterType="com.godLife.project.dto.categories.FaqCateDTO">
    INSERT INTO FAQ_CATEGORY (FAQ_CATEGORY_IDX, FAQ_CATEGORY_NAME)
        VALUES (FAQ_CATEGORY_SEQ.NEXTVAL, #{faqCategoryName})
    </insert>

    <!-- FAQ_CATEGORY 수정 -->
    <update id="updateFaqCate" parameterType="com.godLife.project.dto.categories.FaqCateDTO">
        UPDATE FAQ_CATEGORY
        SET FAQ_CATEGORY_NAME = #{faqCategoryName}
        WHERE FAQ_CATEGORY_IDX = #{faqCategoryIdx}
    </update>

    <!-- FAQ_CATEGORY 삭제 -->
    <delete id="deleteFaqCate" parameterType="int">
    DELETE FROM FAQ_CATEGORY WHERE FAQ_CATEGORY_IDX = #{faqCategoryIdx}
    </delete>

    <!-- 참조 개수 조회 -->
    <select id="countFaqByCategory" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM FAQ_TABLE WHERE FAQ_CATEGORY = #{faqCategoryIdx}
    </select>

    <!-- 중복 카테고리 확인 -->
    <select id = "countByFaqName" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM FAQ_CATEGORY
        WHERE FAQ_CATEGORY_NAME = #{faqCategoryName}
    </select>


                <!--            QNA CATEGORY 관리 테이블 CRUD Mapper         -->

    <!-- QNA_CATEGORY LIST 조회 -->
    <select id="selectAllQnaCate" resultType="com.godLife.project.dto.categories.QnaCateDTO">
        SELECT *
        FROM QNA_CATEGORY
    </select>

    <!-- QNA_CATEGORY 추가 -->
    <insert id="insertQnaCate" parameterType="com.godLife.project.dto.categories.QnaCateDTO">
        INSERT INTO QNA_CATEGORY (QNA_CATEGORY_IDX, QNA_CATEGORY_NAME)
        VALUES (QNA_CATEGORY_SEQ.NEXTVAL, #{qnaCategoryName})
    </insert>

    <!-- QNA_CATEGORY 수정 -->
    <update id="updateQnaCate" parameterType="com.godLife.project.dto.categories.QnaCateDTO">
        UPDATE QNA_CATEGORY
        SET QNA_CATEGORY_NAME = #{qnaCategoryName}
        WHERE QNA_CATEGORY_IDX = #{qnaCategoryIdx}
    </update>

    <!-- QNA_CATEGORY 삭제 -->
    <delete id="deleteQnaCate" parameterType="int">
        DELETE FROM QNA_CATEGORY WHERE QNA_CATEGORY_IDX = #{qnaCategoryIdx}
    </delete>

    <!-- 참조 개수 조회 -->
    <select id="countQnaByCategory" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM QNA_TABLE WHERE CATEGORY = #{qnaCategoryIdx}
    </select>

    <!-- 중복 카테고리 확인 -->
    <select id = "countByQnaName" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM QNA_CATEGORY
        WHERE QNA_CATEGORY_NAME = #{qnaCategoryName}
    </select>
</mapper>
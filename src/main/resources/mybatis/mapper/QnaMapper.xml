<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.godLife.project.mapper.QnaMapper">

    <!-- 1:1 문의 작성 -->
    <insert id="createQna" parameterType="com.godLife.project.dto.contents.QnaDTO">
        <selectKey keyProperty="qnaIdx" resultType="int" order="BEFORE">
            SELECT QNA_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO QNA_TABLE(QNA_IDX, Q_USER_IDX, TITLE, CONTENT, CREATED_AT, CATEGORY, QNA_STATUS)
        VALUES(#{qnaIdx}, #{qUserIdx}, #{title}, #{content}, SYSDATE, #{category}, 'WAIT')
    </insert>

    <!-- 'WAIT' 상태 문의 리스트용 정보 가져오기 -->
    <select id="getlistAllWaitQna" resultType="com.godLife.project.dto.qnaWebsocket.QnaWaitListDTO">
        SELECT Q.QNA_IDX, Q.Q_USER_IDX, U.USER_NAME, Q.TITLE, Q.CREATED_AT, Q.MODIFIED_AT, Q.CATEGORY, Q.QNA_STATUS
        FROM QNA_TABLE Q
        INNER JOIN USER_TABLE U ON Q.Q_USER_IDX = U.USER_IDX
        WHERE Q.QNA_STATUS = 'WAIT'
        ORDER BY Q.CREATED_AT
    </select>

    <select id="getWaitSingleQna" parameterType="int" resultType="com.godLife.project.dto.qnaWebsocket.QnaWaitListDTO">
        SELECT Q.QNA_IDX, Q.Q_USER_IDX, U.USER_NAME, Q.TITLE, Q.CREATED_AT, Q.MODIFIED_AT, Q.CATEGORY, Q.QNA_STATUS
        FROM QNA_TABLE Q
        INNER JOIN USER_TABLE U ON Q.Q_USER_IDX = U.USER_IDX
        WHERE Q.QNA_STATUS = 'WAIT'
        AND Q.QNA_IDX = #{qnaIdx}
    </select>

    <!-- 매칭된 문의 리스트 조회 -->
    <select id="getlistAllMatchedQna" parameterType="int" resultType="com.godLife.project.dto.qnaWebsocket.QnaMatchedListDTO">
        SELECT Q.QNA_IDX, Q.Q_USER_IDX, U.USER_NAME, Q.TITLE, Q.CREATED_AT, Q.MODIFIED_AT, Q.CATEGORY, Q.QNA_STATUS, Q.Q_COUNT
        FROM QNA_TABLE Q
        INNER JOIN USER_TABLE U ON Q.Q_USER_IDX = U.USER_IDX
        WHERE Q.QNA_STATUS NOT IN ('WAIT', 'COMPLETE')
        AND Q.A_USER_IDX = #{adminIdx}
        ORDER BY Q.CREATED_AT
    </select>

    <!-- 매칭된 단일 문의 리스트 조회 -->
    <select id="getMatchedSingleQna" parameterType="map" resultType="com.godLife.project.dto.qnaWebsocket.QnaMatchedListDTO">
        SELECT Q.QNA_IDX, Q.Q_USER_IDX, U.USER_NAME, Q.TITLE, Q.CREATED_AT, Q.MODIFIED_AT, Q.CATEGORY, Q.QNA_STATUS, Q.Q_COUNT
        FROM QNA_TABLE Q
        INNER JOIN USER_TABLE U ON Q.Q_USER_IDX = U.USER_IDX
        WHERE Q.QNA_STATUS NOT IN ('WAIT', 'COMPLETE')
        AND Q.A_USER_IDX = #{adminIdx}
        AND Q.QNA_IDX = #{qnaIdx}
        ORDER BY Q.CREATED_AT
    </select>

    <!-- 문의 답변 달기 -->
    <insert id="commentReply" parameterType="com.godLife.project.dto.contents.QnaReplyDTO">
        INSERT INTO QNA_REPLY(QNA_REPLY_IDX, QNA_IDX, USER_IDX, CONTENT, CREATED_AT)
        VALUES(QNA_CONTENT_SEQ.NEXTVAL, #{qnaIdx}, #{userIdx}, #{content}, SYSDATE)
    </insert>

    <!-- 문의 답변 수 증가 -->
    <update id="increaseReplyCount" parameterType="map">
        UPDATE QNA_TABLE
        SET
        <choose>
            <when test="isWriter == true">
                Q_COUNT = Q_COUNT + 1
            </when>
            <otherwise>
                A_COUNT = A_COUNT + 1
            </otherwise>
        </choose>
        , QNA_STATUS = #{setStatus}
        WHERE QNA_IDX = #{qnaIdx}
        AND QNA_STATUS NOT IN
        <foreach collection="notStatus" open="(" separator=", " close=")" item="status">
            #{status}
        </foreach>
    </update>

    <!-- 1:1 문의 답변 조회 -->
    <select id="getQnaReplyByQnaIdx" parameterType="int" resultType="com.godLife.project.dto.qnaWebsocket.QnaReplyListDTO">
        SELECT ROW_NUMBER() OVER(ORDER BY CREATED_AT) AS QUEUE, USER_IDX, CONTENT, CREATED_AT, MODIFIED_AT
        FROM QNA_REPLY
        WHERE QNA_IDX = #{qnaIdx}
        ORDER BY CREATED_AT
    </select>

    <!-- 답변 수 초기화 -->
    <update id="setClearReplyCountByQnaIdx" parameterType="map">
        UPDATE QNA_TABLE SET
        <choose>
            <when test="isWriter == true">
                A_COUNT = 0
            </when>
            <otherwise>
                Q_COUNT = 0
            </otherwise>
        </choose>
        WHERE QNA_IDX = #{qnaIdx}
    </update>


</mapper>

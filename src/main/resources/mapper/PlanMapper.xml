<?xml version="1.0" encoding="UTF-8" ?>
  <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.godLife.project.mapper.PlanMapper">

  <!-- 루틴 저장 쿼리 -->
  <insert id="insertPlan" parameterType="com.godLife.project.dto.datas.PlanDTO">
    INSERT INTO PLAN_TABLE(
      PLAN_IDX, USER_IDX, PLAN_TITLE, END_TO, TARGET_IDX, IS_SHARED, PLAN_IMP, JOB_IDX
      <if test="isActive != null and isActive == 1">
        , IS_ACTIVE, PLAN_SUB_START, PLAN_SUB_END
      </if>
      <if test="repeatDays != null">
        , REPEAT_DAYS
      </if>
      <if test="forked == true">
        , FORK_IDX
      </if>
    )
    VALUES (
      PLAN_SEQ.NEXTVAL, #{userIdx}, #{planTitle}, #{endTo}, #{targetIdx}, #{isShared}, #{planImp}, #{jobIdx}
      <if test="isActive != null and isActive == 1">
        , #{isActive}, SYSDATE, SYSDATE + #{endTo}
      </if>
      <if test="repeatDays != null">
        , #{repeatDays, typeHandler=com.godLife.project.handler.typehandler.ListStringTypeHandler}
      </if>
      <if test="forked == true">
        , #{forkIdx}
      </if>
    )
    <selectKey keyProperty="planIdx" resultType="int" order="AFTER">
      SELECT PLAN_SEQ.CURRVAL FROM DUAL
    </selectKey>
  </insert>

  <!-- 활동 저장 쿼리 -->
  <insert id="insertActivity" parameterType="com.godLife.project.dto.datas.ActivityDTO">
    <choose>
      <when test="setTime != null ">
        INSERT INTO PLAN_ACTIVITY (ACTIVITY_IDX, PLAN_IDX, ACTIVITY_NAME, SET_TIME,
        <if test="description != null">
          DESCRIPTION,
        </if>
         ACTIVITY_IMP)
        VALUES (ACTIVITY_SEQ.NEXTVAL, #{planIdx}, #{activityName}, #{setTime},
        <if test="description != null">
          #{description},
        </if>
         #{activityImp})
      </when>
      <otherwise>
        INSERT INTO PLAN_ACTIVITY (ACTIVITY_IDX, PLAN_IDX, ACTIVITY_NAME,
        <if test="description != null">
          DESCRIPTION,
        </if>
         ACTIVITY_IMP)
        VALUES (ACTIVITY_SEQ.NEXTVAL, #{planIdx}, #{activityName},
        <if test="description != null">
          #{description},
        </if>
        #{activityImp})
      </otherwise>
    </choose>
  </insert>

  <!-- 기타 직업 추가 쿼리 -->
  <insert id="insertJobEtc" parameterType="com.godLife.project.dto.categories.JobEtcCateDTO">
    INSERT INTO JOB_ETC_CATEGORY
    VALUES (JOB_ETC_SEQ.NEXTVAL, #{planIdx}, #{name}, #{iconKey}, SYSDATE)
  </insert>

  <!-- 활동 상세 보기 -->
  <select id="detailActivityByPlanIdx" parameterType="int">
    SELECT A.ACTIVITY_IDX,
           A.PLAN_IDX,
           A.ACTIVITY_NAME,
           A.SET_TIME,
           A.DESCRIPTION,
           A.ACTIVITY_IMP,
           COALESCE(V.VERIFIED, 0) AS VERIFIED
    FROM PLAN_ACTIVITY A
    LEFT JOIN (
        SELECT V.ACTIVITY_IDX, COUNT(V.ACTIVITY_IDX) AS VERIFIED
        FROM VERIFY_TABLE V
        WHERE V.VERIFY_DATE = TRUNC(SYSDATE)
        GROUP BY V.ACTIVITY_IDX
      ) V ON A.ACTIVITY_IDX = V.ACTIVITY_IDX
    WHERE A.PLAN_IDX = #{planIdx}
    AND A.IS_DELETED = 0
    ORDER BY A.ACTIVITY_IDX
  </select>

  <!-- 루틴 인증 횟수 조회 -->
  <select id="getVerifyCountByPlanIdx" parameterType="int" resultType="int">
    SELECT COUNT(V.ACTIVITY_IDX)
    FROM PLAN_TABLE P
    INNER JOIN PLAN_ACTIVITY A ON P.PLAN_IDX = A.PLAN_IDX
    INNER JOIN VERIFY_TABLE V ON A.ACTIVITY_IDX = V.ACTIVITY_IDX
    WHERE P.PLAN_IDX = #{planIdx}
  </select>

  <!-- 불꽃 정보 조회 -->
  <select id="detailFireByPlanIdx" parameterType="int">
    SELECT F.LV_IDX, F.FIRE_NAME, F.FIRE_COLOR, F.FIRE_EFFECT
    FROM PLAN_TABLE P
    JOIN FIRE_TABLE F ON P.CERT_EXP <![CDATA[ >= ]]> F.MIN_EXP AND P.CERT_EXP <![CDATA[ <= ]]> F.MAX_EXP
    WHERE PLAN_IDX = #{planIdx}
  </select>

  <!-- 직업 카테고리 조회 -->
  <select id="getJOBCategoryByJobIdx" resultType="com.godLife.project.dto.categories.JobCateDTO" parameterType="int">
    SELECT
    JC.JOB_IDX AS IDX,
    JC.JOB_NAME AS NAME,
    JC.ICON_KEY,
    IT.ICON,
    IT.COLOR
    FROM JOB_CATEGORY JC
    LEFT JOIN ICON_TABLE IT ON JC.ICON_KEY = IT.ICON_KEY
    WHERE JOB_IDX = #{jobIdx}
  </select>

  <!-- 관심사 카테고리 조회 -->
  <select id="getTargetCategoryByTargetIdx" resultType="com.godLife.project.dto.categories.TargetCateDTO" parameterType="int">
    SELECT
    TC.TARGET_IDX AS IDX,
    TC.TARGET_NAME AS NAME,
    TC.ICON_KEY,
    IT.ICON,
    IT.COLOR
    FROM TARGET_CATEGORY TC
    LEFT JOIN ICON_TABLE IT ON TC.ICON_KEY = IT.ICON_KEY
    WHERE TARGET_IDX = #{targetIdx}
  </select>

  <!-- 루틴 조회 시 기타 직업 조회 쿼리-->
  <select id="getJobEtcInfoByPlanIdx" resultType="com.godLife.project.dto.categories.JobEtcCateDTO" parameterType="int">
    SELECT
    ETC.JOB_NAME AS NAME,
    ETC.ICON_KEY,
    IT.ICON,
    IT.COLOR
    FROM JOB_ETC_CATEGORY ETC
    LEFT JOIN ICON_TABLE IT ON ETC.ICON_KEY = IT.ICON_KEY
    WHERE PLAN_IDX = #{planIdx}
  </select>

  <!-- 루틴 수정 쿼리 -->
  <update id="modifyPlan" parameterType="com.godLife.project.dto.datas.PlanDTO">
    UPDATE PLAN_TABLE
    SET PLAN_TITLE = #{planTitle},
        END_TO = #{endTo},
        REPEAT_DAYS = #{repeatDays, typeHandler=com.godLife.project.handler.typehandler.ListStringTypeHandler},
        TARGET_IDX = #{targetIdx},
        JOB_IDX = #{jobIdx},
        PLAN_IMP = #{planImp},
        PLAN_SUB_MOD = SYSDATE,
        IS_SHARED = #{isShared}
    WHERE PLAN_IDX = #{planIdx} AND USER_IDX = #{userIdx}
  </update>

  <!-- 활동 수정 쿼리 -->
  <update id="modifyActivity" parameterType="com.godLife.project.dto.datas.ActivityDTO">
    UPDATE PLAN_ACTIVITY
    SET ACTIVITY_NAME = #{activityName},
        <if test="setTime != null">
          SET_TIME = #{setTime},
        </if>
        <if test="setTime == null">
          SET_TIME = NULL,
        </if>
        <if test="description != null">
          DESCRIPTION = #{description},
        </if>
        <if test="description == null">
          DESCRIPTION = NULL,
        </if>
        ACTIVITY_IMP = #{activityImp}
    WHERE PLAN_IDX = #{planIdx} AND ACTIVITY_IDX = #{activityIdx}
  </update>

  <!-- 기타 직업 수정 쿼리 -->
  <update id="modifyJobEtc" parameterType="com.godLife.project.dto.categories.JobEtcCateDTO">
    UPDATE JOB_ETC_CATEGORY
    SET JOB_NAME = #{name},
        ICON_KEY = #{iconKey},
        CREATED_AT = SYSDATE
    WHERE PLAN_IDX = #{planIdx}
  </update>

  <!-- 루틴 추천 횟수 업데이트 -->
  <update id="modifyLikeCount" parameterType="int">
    UPDATE PLAN_TABLE
    SET LIKE_COUNT = (SELECT COUNT(*) FROM LIKE_TABLE WHERE PLAN_IDX = #{planIdx})
    WHERE PLAN_IDX = #{planIdx}
  </update>
  <!-- 루틴 조회수 증가 -->
  <update id="increaseView" parameterType="int">
    UPDATE PLAN_TABLE
    SET VIEW_COUNT = VIEW_COUNT + 1
    WHERE PLAN_IDX = #{planIdx}
  </update>

  <!-- 루틴 포크수 증가 -->
  <update id="modifyForkCount" parameterType="map">
    UPDATE PLAN_TABLE
    SET FORK_COUNT = (SELECT COUNT(*) FROM PLAN_TABLE WHERE FORK_IDX = #{planIdx} AND IS_DELETED = #{isDeleted})
    WHERE PLAN_IDX = #{planIdx}
  </update>

  <!-- 루틴 삭제 처리 -->
  <update id="deletePlan" parameterType="map">
    UPDATE PLAN_TABLE
       SET IS_DELETED = 1, IS_ACTIVE = 0, IS_COMPLETED = 0, PLAN_SUB_START = NULL, PLAN_SUB_END = NULL
     WHERE PLAN_IDX = #{planIdx} AND USER_IDX = #{userIdx}
  </update>

  <!-- 루틴 시작/정지 -->
  <update id="goStopPlan" parameterType="map">
    UPDATE PLAN_TABLE
       SET IS_ACTIVE = #{isActive},
           <if test="isActive == 1">
             PLAN_SUB_START = SYSDATE,
             PLAN_SUB_END = SYSDATE + END_TO
           </if>
           <if test="isActive == 0">
             PLAN_SUB_START = NULL,
             PLAN_SUB_END = NULL
           </if>
     WHERE PLAN_IDX = #{planIdx} AND USER_IDX = #{userIdx}
  </update>

  <!-- 후기 작성 -->
  <update id="addReview" parameterType="com.godLife.project.dto.request.PlanRequestDTO">
    UPDATE PLAN_TABLE
    SET REVIEW = #{review}
    WHERE (PLAN_IDX = #{planIdx} AND USER_IDX = #{userIdx}) AND IS_COMPLETED = 1 AND REVIEW IS NULL
  </update>
  <!-- 후기 수정 -->
  <update id="modifyReview" parameterType="com.godLife.project.dto.request.PlanRequestDTO">
    UPDATE PLAN_TABLE
    SET REVIEW = #{review}
    WHERE (PLAN_IDX = #{planIdx} AND USER_IDX = #{userIdx}) AND IS_COMPLETED = 1 AND REVIEW IS NOT NULL
  </update>

  <!-- 모든 루틴 완료 상태 최신화 -->
  <update id="updateCompleteByPlanIdx" parameterType="int">
    UPDATE PLAN_TABLE
    SET IS_COMPLETED = 1, IS_ACTIVE = 0
    WHERE PLAN_IDX = #{planIdx} AND ((IS_ACTIVE = 1 AND IS_COMPLETED = 0 AND IS_DELETED = 0) AND PLAN_SUB_END <![CDATA[ <= ]]> SYSDATE)
  </update>
  <!-- 루틴 조기 완료 처리 -->
  <update id="updateEarlyComplete" parameterType="com.godLife.project.dto.request.PlanRequestDTO">
    UPDATE PLAN_TABLE
    SET IS_COMPLETED = 1
    WHERE (PLAN_IDX = #{planIdx} AND USER_IDX = #{userIdx}) AND (IS_COMPLETED = 0 AND IS_DELETED = 0 AND IS_ACTIVE = 1)
  </update>

  <!-- 추천 하기 -->
  <insert id="likePlan" parameterType="com.godLife.project.dto.request.PlanRequestDTO">
    INSERT INTO LIKE_TABLE VALUES (#{userIdx}, #{planIdx}, SYSDATE)
  </insert>
</mapper>